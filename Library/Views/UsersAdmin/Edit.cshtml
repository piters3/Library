@model Library.Models.EditUserViewModel

@{
    ViewBag.Title = "Edytowanie użytkownika " + '"' + Model.UserName + '"';
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}



@section Breadcrumb{
    <div>
        <h1>@ViewBag.Title</h1>
        <ul class="breadcrumb side">
            <li><i class="fa fa-home fa-lg"></i></li>
            <li><a href="@Url.Action("Index", "UsersAdmin")">Zarządznie użytkownikami</a></li>
            <li>@ViewBag.Title</li>
        </ul>
    </div>
}

<div class="col-md-6">
    <div class="card">
        <h3 class="card-title">@ViewBag.Title</h3>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "UsersAdmin", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" })) {
                @Html.AntiForgeryToken()
                if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0) {
                    <div class="alert alert-dismissible alert-danger">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        @Html.ValidationSummary(true, "")
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(m => m.ImageData, new { @class = "control-label col-md-3" })
                    <div class="col-md-offset-3 col-md-10">
                        <div class="avatar">
                            @if (Model.ImageData != null) {
                                <img src="@Url.Action("GetImage", "Home" )" />
                            } else {
                                <img src="@Url.Action("GetDefaultImage", "Home" )" />
                            }
                        </div>
                        <input type="file" name="Image">
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Name, new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Surname, new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Surname, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Surname, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Address, new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.City, new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.PostalCode, new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.PostalCode, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.PostalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.RolesList, new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @foreach (var item in Model.RolesList) {
                                <input type="radio" name="SelectedRole" id="@item.Value" value="@item.Value" checked="@item.Selected" class="checkbox-inline" />
                                @Html.Label(item.Value, new { @class = "control-label" })
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Enabled, new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.CheckBoxFor(m => m.Enabled, new { @class = "checkbox-inline", id = "status" })
                            @Html.Label("status", "Konto włączone", new { @class = "control-label" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-8">
                            <button class="btn btn-primary icon-btn" type="submit"><i class="fa fa-fw fa-lg fa-check-circle"></i>Zapisz</button>
                        </div>
                    </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
